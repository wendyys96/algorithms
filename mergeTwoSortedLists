/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} list1
 * @param {ListNode} list2
 * @return {ListNode}
 */
var mergeTwoLists = function(list1, list2) {
    if(list1 === null) return list2;
    if(list2 === null) return list1;
    let left = list1;
    let right = list2;
    let head = null;
    if(left.val < right.val) {
        head = left;
        left = left.next;
    } else {
        head = right;
        right = right.next;
    }
    let curr = head;
    while(left || right) {
        if(!right || (left && left.val < right.val))  {
            curr.next = left;
            left = left.next;
        } else if (!left || (right && right.val <= left.val)){
            curr.next = right;
            right = right.next;
        }
        curr = curr.next;
    }
    return head;
};